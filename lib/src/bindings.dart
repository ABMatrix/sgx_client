// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
import 'dart:ffi' as ffi;

/// Dart bindings to call veirfy functions
class VerifyBindings {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  VerifyBindings(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  VerifyBindings.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  ffi.Pointer<ffi.Int8> verifyMraCert(
    ffi.Pointer<ffi.Int8> pem,
  ) {
    return _verifyMraCert(
      pem,
    );
  }

  late final _verifyMraCertPtr = _lookup<
      ffi.NativeFunction<
          ffi.Pointer<ffi.Int8> Function(
              ffi.Pointer<ffi.Int8>)>>('verify_mra_cert');
  late final _verifyMraCert = _verifyMraCertPtr
      .asFunction<ffi.Pointer<ffi.Int8> Function(ffi.Pointer<ffi.Int8>)>();

  void rustCstrFree(ffi.Pointer<ffi.Int8> s) {
    return _rustCstrFree(s);
  }

  late final _rustCstrFreePtr =
      _lookup<ffi.NativeFunction<ffi.Void Function(ffi.Pointer<ffi.Int8>)>>(
          'rust_cstr_free');
  late final _rustCstrFree =
      _rustCstrFreePtr.asFunction<void Function(ffi.Pointer<ffi.Int8>)>();
}
